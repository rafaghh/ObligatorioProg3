// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObligatorioProg3.Datos;

#nullable disable

namespace ObligatorioProg3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240706223000_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ObligatorioProg3.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Montevideo"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Colonia"
                        });
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Ejercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoMaquinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoMaquinaId");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("ResponsableId");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioCompra")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("VidaUtil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("TipoMaquinaId");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Responsable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Responsables");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Rutina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoRutinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoRutinaId");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.RutinaEjercicio", b =>
                {
                    b.Property<int>("RutinaId")
                        .HasColumnType("int");

                    b.Property<int>("EjercicioId")
                        .HasColumnType("int");

                    b.HasKey("RutinaId", "EjercicioId");

                    b.HasIndex("EjercicioId");

                    b.ToTable("RutinaEjercicios");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("TipoId");

                    b.ToTable("Socios");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.SocioRutina", b =>
                {
                    b.Property<int>("SocioId")
                        .HasColumnType("int");

                    b.Property<int>("RutinaId")
                        .HasColumnType("int");

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.HasKey("SocioId", "RutinaId");

                    b.HasIndex("MaquinaId");

                    b.HasIndex("RutinaId");

                    b.ToTable("SocioRutinas");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.TipoMaquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaquinaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposMaquina");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Máquina para correr y caminar",
                            MaquinaNombre = "Cinta de correr"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Máquina para ejercicio cardiovascular",
                            MaquinaNombre = "Bicicleta estática"
                        });
                });

            modelBuilder.Entity("ObligatorioProg3.Models.TipoRutina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposRutina");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Salud"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Competición amateur"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Competición profesional"
                        });
                });

            modelBuilder.Entity("ObligatorioProg3.Models.TipoSocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beneficios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposSocio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Beneficios = "Acceso limitado a áreas generales",
                            TipoNombre = "Estándar"
                        },
                        new
                        {
                            Id = 2,
                            Beneficios = "Acceso ilimitado a áreas generales",
                            TipoNombre = "Premium"
                        });
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Ejercicio", b =>
                {
                    b.HasOne("ObligatorioProg3.Models.TipoMaquina", "TipoMaquina")
                        .WithMany()
                        .HasForeignKey("TipoMaquinaId");

                    b.Navigation("TipoMaquina");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Local", b =>
                {
                    b.HasOne("ObligatorioProg3.Models.Ciudad", "Ciudad")
                        .WithMany("Locales")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProg3.Models.Responsable", "Responsable")
                        .WithMany("Locales")
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Maquina", b =>
                {
                    b.HasOne("ObligatorioProg3.Models.Local", "Local")
                        .WithMany("Maquinas")
                        .HasForeignKey("LocalId");

                    b.HasOne("ObligatorioProg3.Models.TipoMaquina", "TipoMaquina")
                        .WithMany("Maquinas")
                        .HasForeignKey("TipoMaquinaId");

                    b.Navigation("Local");

                    b.Navigation("TipoMaquina");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Rutina", b =>
                {
                    b.HasOne("ObligatorioProg3.Models.TipoRutina", "TipoRutina")
                        .WithMany("Rutinas")
                        .HasForeignKey("TipoRutinaId");

                    b.Navigation("TipoRutina");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.RutinaEjercicio", b =>
                {
                    b.HasOne("ObligatorioProg3.Models.Ejercicio", "Ejercicio")
                        .WithMany("RutinaEjercicios")
                        .HasForeignKey("EjercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProg3.Models.Rutina", "Rutina")
                        .WithMany("RutinaEjercicios")
                        .HasForeignKey("RutinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejercicio");

                    b.Navigation("Rutina");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Socio", b =>
                {
                    b.HasOne("ObligatorioProg3.Models.Local", "Local")
                        .WithMany("Socios")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ObligatorioProg3.Models.TipoSocio", "TipoSocio")
                        .WithMany("Socios")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("TipoSocio");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.SocioRutina", b =>
                {
                    b.HasOne("ObligatorioProg3.Models.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProg3.Models.Rutina", "Rutina")
                        .WithMany("SocioRutinas")
                        .HasForeignKey("RutinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProg3.Models.Socio", "Socio")
                        .WithMany("SocioRutinas")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maquina");

                    b.Navigation("Rutina");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Ciudad", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Ejercicio", b =>
                {
                    b.Navigation("RutinaEjercicios");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Local", b =>
                {
                    b.Navigation("Maquinas");

                    b.Navigation("Socios");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Responsable", b =>
                {
                    b.Navigation("Locales");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Rutina", b =>
                {
                    b.Navigation("RutinaEjercicios");

                    b.Navigation("SocioRutinas");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.Socio", b =>
                {
                    b.Navigation("SocioRutinas");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.TipoMaquina", b =>
                {
                    b.Navigation("Maquinas");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.TipoRutina", b =>
                {
                    b.Navigation("Rutinas");
                });

            modelBuilder.Entity("ObligatorioProg3.Models.TipoSocio", b =>
                {
                    b.Navigation("Socios");
                });
#pragma warning restore 612, 618
        }
    }
}
